- if @domain.result_name != ""
    - title @domain.result_name
- else
    - title t("task.task_for") + " " + @domain.name
.fields
    .box
        .box-inner
            .field
                .field-label
                    = t('task.domain')
                .field-content
                    = h Domain.find(@task.domain_id).name
            .field
                .field-label
                    = t('task.deadline')
                .field-content
                    = h show_date(@task.deadline)
#templates
    -unless @valueshash.nil?
        - @valueshash.each do |k,v|
            .template-toggle
                %span.template-toggle-inner
                    = MedicalTemplate.find(k).name
            .template-content{:id=>"t#{k}"}
                %table
                    %thead
                        %tr
                            %th=t('task.name')
                            %th=t('task.creator_comment')
                            %th=t('task.value')
                            %th=t('task.unit')
                            %th=t('task.comment')
                    %tbody
                        -v.each do |x,y|
                            %tr.template-field
                                - field = Field.find(y.field_id)
                                - fielddef = FieldDefinition.find(field.field_definition_id)
                                %td= Entry.find(fielddef.field_entry_id).name
                                %td= field.comment
                                - if fielddef.input_type == 2
                                    -if y.value == '1'
                                        %td=t('task.y')
                                    -else
                                        %td=t('task.n')
                                - else
                                    %td= y.value
                                -if field.ucum_entry_id.nil?
                                    %td= '-'
                                -else
                                    -ucum = Entry.find(field.ucum_entry_id)
                                    %td= ucum.description
                                %td= y.comment
%h2.floatingheadline= t('task.attached_files')
.fields
    .box
        .box-inner
            - if @taskfiles.nil? || @taskfiles.empty?
                %div= t('task.no_attached_files')
            - else
                - @taskfiles.each do |tf|
                    .field.results-show-file{:class => cycle('odd', 'even')}
                        .field-label
                            = link_to tf.name, tf.path
                        .field-content
                            = tf.description
.action-links
    - if authorize?('access_finding') && current_active_patient
        = link_to t('action.back'), patient_findings_path(:patient_id => current_active_patient.id), :class => 'acts_as_button darkgray'